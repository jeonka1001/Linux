2020.06.09

[텍스트 파일 편집기]
vim, emacs, gedit, nano...
나노 편집기 사용 방법 : nano 파일명

more 파일명 : 해당 파일을 실행( 출력은 터미널에 표시 가능한 만큼씩 한다.)
- space bar : 다음 페이지로 이동
- b(backward) : 이젠 페이지 이동
- enter : 한 줄 아래로 이동
- = : 현재 줄번호 표시(마지막줄 기준)
- d : 다음 페이지의 절반 이동
- q : 종료

less 파일명 : 'less is more' 라는 문장에서 유래한 명령어로, more 라는 명령어를 더 발전시킨 명령어
- 키보드 내 화살표 / pagedown 같은 사용자 편의 명령어가 사용 가능 
- more 의 명령어 또한 사용 가능하다.
- j : 한 줄 아래로 이동
- k : 한 줄 위로 이동
- 문서의 처음 이동 : 1G 또는 g / N행으로 이동은 : NG
- G : 문서의 마지막으로 이동
- 문자열 찾기 : /찾을 문자열
- d : 다음 페이지의 절반만 이동
- u : 이전 페이지의 절반만 이동 
- q : 종료

head 파일명 : 시작부터 10줄 출력
tail 파일명 : 끝에서 10줄 출력
- -n : head / tail 에서 출력 할 행의 개수 지정

[텍스트 파일 처리하기]
sort - 해당 텍스트 파일을 문자열 순서로 오름차순 정렬 ( 원본 파일은 수정되지 않는다. )
정렬 기준은 첫 번째 컬럼을 기준으로 함, 만약 다른 컬럼을 기준을 ㅗ정렬을 수행하고 싶은 경우 -k 옵션을 사용하면 됨, 컬럼의 값은 1부터 시작함.
ex) -sort -k 2 fruits.txt
- sort는 컬럼을 구분하기위해 구분자로 공백이나 탭을 사용함.
- 임의의 문자를 사용하여 구분하기 위해서는 -t 옵션을 사용한다.
sort -t ':' -k 4 etc/passwd 
- 정렬은 토큰의 첫 번째 문자를 기준으로 정렬하므로 숫자를 정렬할 경우 ,올바르게 정렬되지 않는다는 문제가 있음.
- 이를 해결하려면 수의 개념으로 한정하여 정렬하도록 해야함(-n(number)) 
sort -t ':' -k 4 -n /etc/passwd
- -r (reverse 내림차순 정렬)
- -R 랜덤하게 섞어서 출력하기
- -f : 대소문자와 상관 없이 정렬
- -b(blank) : 검색 기준이 되는 토큰 앞에 공백이 있을 때 이를 무시하고 정렬한다.
- -c(check) : 이미 정렬되어 있는지 검사 ( 이미 정렬되어있을 시 아무 반응이 없다. )

uniq - 텍스트 파일 내에 중복된 행이 "연속적으로" 존재할 경우 이를 중복 없이 하나의 행으로 변환하는 명령어
uniq 파일명
apple				apple		apple
apple  -->> apple		banana	->>	banana   출력한다.
banana	    banana 출력		apple		apple
- -c : 각 단어의 중복된 횟수를 알 수 있다. (연속된 행으로만 처리한다.)
- -u : 중복되지 않은 행을 출력한다.

wc : word count 의 약자로 파일에 들어있는 행의수, 단어(토큰)의개수, 전체 문자의 개수(구분자 공백 개행 포함)
- -l : 행의 개수만 출력 
- -w : 단어의 개수만 출력
- -c : 문자의 개수만 출력(byte 단위 즉, 모든 문자 출력)
- -m : 출력되는 문자의 개수만 출력

file 파일명 : 해당 파일의 상태( 내부 컨텐츠의 구성요소 및 어떤 종류인지 ) 알 수 있다.

< 표준 출력 명령어 > 
echo : 인자로 전달된 토큰을 표준 출력으로 전송

와일드 카드 : 수많은 파일들에 대해서 그룹을 지정할 수있는 특수한 문자로 셸이 제공함.
글로빙, 메타문자 라고도 한다.
1. * 0개 이상의 임의의 문자로 해석
echo * 현재 디렉터리의 모든 파일명으로 확장
- 다른 문자와 조합해서 사용할 수있음
- echo /bin/g* : 디렉터리 안의 파일 중 g로 시작하는 파일 출력
- echo /bin/*zip : 디렉터리 안의 파일 중 zip 으로 끝나는 파일 출력
- ehco -f*.txt : f로 시작하는 txt 파일 출력
- echo /bin/?? : bin 디렉터리 아래 두글자 이름을 가진 파일 출력
- '\' : 와일드카드, 메타문자를 문자 그대로 해석되게 해준다.
- '[]' : (브라켓)특정 범위의 문자 또는 문자 집합에 대하여 하나의 문자에 대응되는 와일드카드 또는 메타문자
 (1개 이상 사용이 가능)

파일 생성]]
>파일명 : 비어있는 파일을 생성한다.
mkdir : 비어있는 디렉터리 생성
mkdir 파일1 파일2 파일3 ... 파일(디렉터리) 여러개 생성

삭제]]
rm - 파일 지우기 / rmdir - 디렉터리 지우기 ( 비어있는 디렉터리만 삭제 가능 )
-i(--interactive) : 파일을 삭제하기 전에 확인하는 옵션( 'y' : 삭제 )
-r(--recursive) : 하위 디렉터리 하위 파일과 해당 디렉터리까지 삭제
-f(--force) : 존재하지 않는 파일에 대해서 확인 메시지 없이 무시하고 진행하라는 의미

복사]]
cp 파일명 디렉터리  >> cp hello.txt mysub ->> hello 를 mysub에 복사한다
cp 파일명1 파일명2  >> cp hello.txt hello1.txt ->> hello와 같은 hello1 파일을 생성한다
-i : 파일 복사전에 덮어쓸 위험이 있기 때문에 확인용도로 사용한다
-r : 디렉터리 통째로 복사
-u : 파일을 다른 곳에서 복사할 때 그 곳에 없는 파일이나 최신 버전의 파일만 복사함

이동]]
mv(move) 파일이나 디렉터리를 이동할 때 사용
- mv 파일명... 디렉터리명
- mv 디렉터리명1 디렉터리명2
- i(--interactive) : 기존 파일이 존재할 경우, 덮어쓰기 때문에 이를 확인하는 옵션(같은 이름이 파일이 존재할 경우 덮어쓴다)
-u --update : 파일을 이동할때 그 곳에 파일이 없거나 최신 파일만 이동
파일이나 디렉터리 이름을 변경할 때, mv 명령어를 사용
mv OLDNAME NEWNAME

ln : link 의 약자로 하드링크 또는 심볼릭 링크를만들 때 사용하는 명령어
ln hello world ( ln 파일명 링크명 )
- 하드링크 : 같은 파일에 대하여 다른 이름을 부여하는 개념 ( 복사에 대한 오버헤드를 줄이기 위해 사용하는 링크개념 )
	 -> 같은 디스크 파티션 안에 있는 파일이 아니면 참조할 수 없다.
	 ->> 하드링크는 디렉터리 참조할 수 없다.(자기자신 / 부모 -> 하드링크 가능)

- 심볼릭 링크: 아이노드를 참조하는것이 아닌 디렉터리 또는 파일에 대한 경로 정보를 가지고 있는 특수 파일 
	 ->> ls -s 파일명/디렉터리명 별칭
	 ->> 심볼릭 길크를 사용하여 디렉터리 링크를 건 경우, 싱황에 따라 다시 무한 루프에 빠질 수 있는데, 이는 몇 회 이상 수행하면 리눅스 시스템은 탐색을 중지시킨다.
** 심볼릭 링크 : 해당 파일의 경로를 참조한다
** 하드링크 : 해당 링크의 inode를 참조한다.

- 아이노드 : 각각 파일 시스템마다 개별적으로 존재( 공유 불가 )
nlink: 해당 파일을 참조하는 파일 개수

명령어의 개념 ]] 
1. 프록래밍 언어나 스크립트 언어로 구현되어 실행 가능한 프로그램
  - C/C++ 등등 과 같은 언어로 작성되어 컴파일된 바이너리 파일

2. 셸이 자체적으로 제공하는 실행 가능한 명령어, 내장 명령어 라고 하며 대표적인 예가 cd 이다
  - ls 같은 언어는 which 에서 볼 수 있기 때문에 실행파일이다.
3. 셸함수 , mini script 라고 하낟.
4. alias 별칭 명령어로 정의

별칭짓기 (alias) ]]
- 사용방법 : alias 볊칭 ='기존명령여'
- 정의된 별칭 확인 방법 : alias
- unalias 별칭 : 빌칭을 삭제하는 방법

각 명령어에 따른 도움말 보기]]
- 리눅스는 각 명령어에 대한 type 보는 기능을 제공한다.
- 각 type마다 도움말을 보는 법이 다르다.
- type 명령어 : 해당 명령어에 대한 타입을 보여준다
1. 내장 명령어(builtin)의 도움말 확인 방법 - help 내장명령어 ex) help alias
 ( 최근에는 --help 를 지원하는 추세 )
  alias: alias [-p] [name[=value] ... ] --> [] 는 생략가능 ...은 복수의 인자 사용 가능
2. 실행 파일에서 도움말 확인 방법
 -h / --help
